"""empty message

Revision ID: 6af936190155
Revises: ae7151e000ab
Create Date: 2024-05-31 11:47:29.458679

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '6af936190155'
down_revision = 'ae7151e000ab'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('character',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('description', sa.String(length=500), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('planet',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('description', sa.String(length=500), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('vehicle',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('description', sa.String(length=500), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('favorite_character',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('character_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['character_id'], ['character.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('favorite_planet',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('planet_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['planet_id'], ['planet.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('favorite_vehicle',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('vehicle_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['vehicle_id'], ['vehicle.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('characters_favorites')
    op.drop_table('planets')
    op.drop_table('vehicles_favorites')
    op.drop_table('characters')
    op.drop_table('vehicles')
    op.drop_table('planets_favorites')
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.alter_column('email',
               existing_type=sa.VARCHAR(length=120),
               type_=sa.String(length=250),
               existing_nullable=False)
        batch_op.alter_column('password',
               existing_type=sa.VARCHAR(length=80),
               type_=sa.String(length=50),
               existing_nullable=False)
        batch_op.drop_column('is_active')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.add_column(sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False))
        batch_op.alter_column('password',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=80),
               existing_nullable=False)
        batch_op.alter_column('email',
               existing_type=sa.String(length=250),
               type_=sa.VARCHAR(length=120),
               existing_nullable=False)

    op.create_table('planets_favorites',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('planet_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['planet_id'], ['planets.id'], name='planets_favorites_planet_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='planets_favorites_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='planets_favorites_pkey')
    )
    op.create_table('vehicles',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('vehicles_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('model', sa.VARCHAR(length=120), autoincrement=False, nullable=False),
    sa.Column('vehicle_class', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('manufacturer', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('cost_in_credits', sa.VARCHAR(length=80), autoincrement=False, nullable=False),
    sa.Column('lenght', sa.VARCHAR(length=80), autoincrement=False, nullable=False),
    sa.Column('crew', sa.VARCHAR(length=80), autoincrement=False, nullable=False),
    sa.Column('passengers', sa.VARCHAR(length=80), autoincrement=False, nullable=False),
    sa.Column('max_speed', sa.VARCHAR(length=80), autoincrement=False, nullable=False),
    sa.Column('cargo_capacity', sa.VARCHAR(length=80), autoincrement=False, nullable=False),
    sa.Column('consumables', sa.VARCHAR(length=80), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='vehicles_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('characters',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('characters_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=120), autoincrement=False, nullable=False),
    sa.Column('height', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('mass', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('eye_color', sa.VARCHAR(length=80), autoincrement=False, nullable=False),
    sa.Column('hair_color', sa.VARCHAR(length=80), autoincrement=False, nullable=False),
    sa.Column('birth_year', sa.VARCHAR(length=80), autoincrement=False, nullable=False),
    sa.Column('skin_color', sa.VARCHAR(length=80), autoincrement=False, nullable=False),
    sa.Column('gender', sa.VARCHAR(length=80), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='characters_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('vehicles_favorites',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('vehicle_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='vehicles_favorites_user_id_fkey'),
    sa.ForeignKeyConstraint(['vehicle_id'], ['vehicles.id'], name='vehicles_favorites_vehicle_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='vehicles_favorites_pkey')
    )
    op.create_table('planets',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=120), autoincrement=False, nullable=False),
    sa.Column('diameter', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('rotation_speed', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('orbital_period', sa.VARCHAR(length=80), autoincrement=False, nullable=False),
    sa.Column('gravity', sa.VARCHAR(length=80), autoincrement=False, nullable=False),
    sa.Column('population', sa.VARCHAR(length=80), autoincrement=False, nullable=False),
    sa.Column('climate', sa.VARCHAR(length=80), autoincrement=False, nullable=False),
    sa.Column('terrain', sa.VARCHAR(length=80), autoincrement=False, nullable=False),
    sa.Column('surface_water', sa.VARCHAR(length=80), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='planets_pkey')
    )
    op.create_table('characters_favorites',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('character_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['character_id'], ['characters.id'], name='characters_favorites_character_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='characters_favorites_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='characters_favorites_pkey')
    )
    op.drop_table('favorite_vehicle')
    op.drop_table('favorite_planet')
    op.drop_table('favorite_character')
    op.drop_table('vehicle')
    op.drop_table('planet')
    op.drop_table('character')
    # ### end Alembic commands ###
